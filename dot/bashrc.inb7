# Late-ish running setup for full cjs environment


############################################################
# Handy aliases

sk()            {
    env | grep '^SSH_AUTH_SOCK=' \
        || echo 1>&2 "Warning: SSH_AUTH_SOCK not set in environment"
    ssh-add -l "$@"
}
d()     { sudo docker "$@"; };  complete -F _docker d

findf() {
    [ -z "$1" ] && {
        echo 1>&2 "Usage: findf DIR ... [NAME-FRAGMENT [FIND-OPS ...]]"
        return 2;
    }
    local roots=() namefrag
    while [ -e "$1" ]; do roots+=("$1"); shift; done
    local name_frag="$1"; shift
    local predicate=-iname
    [[ $name_frag =~ / ]] && predicate=-ipath
    find -L "${roots[@]}" -type f $predicate "*$name_frag*" "$@" 2>/dev/null
}


#############################################################
# Set prompt

__PROMPT_exit_status() {
    local exitcode="$?"
    #   \[â€¦\] tells readline not to count these as printing chars
    #   XXX The \[ in this stuff doesn't work; debug it.
    local red=$'\[\033[1;31m\]' none=$'\[\033[m\]'
    local red=$'' none=$''
    case "$exitcode" in
        0) : ;;
        *) echo "${red}${exitcode}${none} ";;
    esac
}

case `id -u -n` in
    root)               PS1='$(__PROMPT_exit_status)# ';;
    cjs|curt*|samp*)    PS1='$(__PROMPT_exit_status)$ ';;
    *)                  PS1='$(id -u -n) $(__PROMPT_exit_status)\$';;
esac


############################################################
# Python virtualenvwrapper (mkvirtualenv, workon, deactivate, etc.)
# Not sure that hardcoding /usr/bin/python3 is the best way to do this.
if [[    -z $WORKON_HOME \
      && -r ~/.local/bin/virtualenvwrapper.sh \
      && -x /usr/bin/python3 \
]]; then
    export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
    export WORKON_HOME=~/co/py-virtualenv
    if [ -r $WORKON_HOME/initialize ]; then
        . ~/.local/bin/virtualenvwrapper.sh
    else
        # An initial setup of an empty $WORKON_HOME logs annoying messages
        # at logger info level which by default goes to stderr.
        . ~/.local/bin/virtualenvwrapper.sh 2>&1 \
            | grep -v "^virtualenvwrapper.user_scripts creating $WORKON_HOME"
    fi
fi
